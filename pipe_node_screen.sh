#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
CLR_INFO='\033[1;97;44m'    # –ë–µ–ª—ã–π –Ω–∞ —Å–∏–Ω–µ–º - –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
CLR_SUCCESS='\033[1;30;42m'  # –ß—ë—Ä–Ω—ã–π –Ω–∞ –∑–µ–ª—ë–Ω–æ–º - –¥–ª—è —É—Å–ø–µ—Ö–∞
CLR_WARNING='\033[1;37;41m'  # –ë–µ–ª—ã–π –Ω–∞ –∫—Ä–∞—Å–Ω–æ–º - –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
CLR_ERROR='\033[1;31;40m'    # –ö—Ä–∞—Å–Ω—ã–π –Ω–∞ —á—ë—Ä–Ω–æ–º - –¥–ª—è –æ—à–∏–±–æ–∫
CLR_GREEN='\033[1;32m'       # –ó–µ–ª—ë–Ω—ã–π - –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
CLR_RESET='\033[0m'          # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–æ–≤

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
CONFIG_FILE="$HOME/pipe/config.sh"

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "${CLR_INFO}      –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π Pipe Network      ${CLR_RESET}"
    echo -e "${CLR_GREEN}--------------------------------------------------${CLR_RESET}"
    echo -e "${CLR_GREEN}|       Pipe Network Node Manager by Sshadow84  |${CLR_RESET}"
    echo -e "${CLR_GREEN}--------------------------------------------------${CLR_RESET}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
function install_dependencies() {
    echo -e "${CLR_INFO}‚ñ∂ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...${CLR_RESET}"
    sudo apt update
    for pkg in screen curl ufw libcap2-bin; do
        if ! dpkg -l | grep -q $pkg; then
            sudo apt install -y $pkg || { echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $pkg${CLR_RESET}"; exit 1; }
        fi
    done
    echo -e "${CLR_SUCCESS}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${CLR_RESET}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã Pipe
function install_and_setup_node() {
    echo -e "${CLR_INFO}‚ñ∂ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–¥—ã Pipe...${CLR_RESET}"
    mkdir -p $HOME/pipe/pipe_cache
    cd $HOME/pipe

    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ pop –∏ –ø–æ—Ä—Ç–æ–≤
    sudo rm -f ./pop
    for port in 80 443 8003; do
        sudo lsof -i :$port | awk 'NR>1 {print $2}' | xargs -r sudo kill -9
    done

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ pop v0.2.8
    curl -L -o pop https://dl.pipecdn.app/v0.2.8/pop || { echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è pop${CLR_RESET}"; exit 1; }
    sudo chmod +x pop
    sudo setcap 'cap_net_bind_service=+ep' ./pop

    # –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ —á–µ—Ä–µ–∑ ufw
    echo -e "${CLR_INFO}‚ñ∂ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ 80, 443, 8003 —á–µ—Ä–µ–∑ UFW...${CLR_RESET}"
    sudo ufw allow 80/tcp
    sudo ufw allow 443/tcp
    sudo ufw allow 8003/tcp
    sudo ufw reload

    # –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    read -p "–í–≤–µ–¥–∏—Ç–µ RAM –¥–ª—è –Ω–æ–¥—ã (–≤ –ì–ë, –Ω–∞–ø—Ä–∏–º–µ—Ä, 4): " RAM
    read -p "–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å. –æ–±—ä—ë–º –¥–∏—Å–∫–∞ (–≤ –ì–ë, –Ω–∞–ø—Ä–∏–º–µ—Ä, 100): " DISK
    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Solana –∫–æ—à–µ–ª—ë–∫ (pubKey): " WALLET_KEY
    echo "RAM=$RAM" > "$CONFIG_FILE"
    echo "DISK=$DISK" >> "$CONFIG_FILE"
    echo "WALLET_KEY=\"$WALLET_KEY\"" >> "$CONFIG_FILE"
    echo -e "${CLR_SUCCESS}‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $CONFIG_FILE${CLR_RESET}"

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    read -p "–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " REF_CODE
    if [ -n "$REF_CODE" ]; then
        sudo ./pop --signup-by-referral-route "$REF_CODE" || { echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏${CLR_RESET}"; return 1; }
    fi
    echo -e "${CLR_SUCCESS}‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${CLR_RESET}"

    # –ó–∞–ø—É—Å–∫
    sudo screen -dmS pipe_node ./pop --ram "$RAM" --max-disk "$DISK" --cache-dir ./pipe_cache --pubKey "$WALLET_KEY" --enable-80-443
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ Pipe –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Å–µ—Å—Å–∏–∏ 'pipe_node'!${CLR_RESET}"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    sleep 5  # –î–∞—ë–º –≤—Ä–µ–º—è –Ω–æ–¥–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ 80, 443, 8003...${CLR_RESET}"
    if ! sudo ss -tuln | grep -qE '80.*LISTEN|443.*LISTEN|8003.*LISTEN'; then
        echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –ø–æ—Ä—Ç—ã 80, 443 –∏–ª–∏ 8003 –Ω–µ —Å–ª—É—à–∞—é—Ç—Å—è!${CLR_RESET}"
        sudo screen -r pipe_node  # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    else
        echo -e "${CLR_SUCCESS}‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã (80, 443, 8003) –∞–∫—Ç–∏–≤–Ω—ã!${CLR_RESET}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã
function check_status() {
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫ –Ω–æ–¥—ã...${CLR_RESET}"
    cd $HOME/pipe && ./pop --status
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ–∏–Ω—Ç–æ–≤
function check_points() {
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ–∏–Ω—Ç–æ–≤...${CLR_RESET}"
    cd $HOME/pipe && ./pop --points
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
function generate_referral() {
    echo -e "${CLR_INFO}‚ñ∂ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞...${CLR_RESET}"
    cd $HOME/pipe && ./pop --gen-referral-route
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ node_info.json
function backup_node_info() {
    if [ -f "$HOME/pipe/node_info.json" ]; then
        cp $HOME/pipe/node_info.json $HOME/pipe/node_info_backup_$(date +%F_%T).json
        echo -e "${CLR_SUCCESS}‚úÖ –ö–æ–ø–∏—è node_info.json —Å–æ–∑–¥–∞–Ω–∞: $HOME/pipe/node_info_backup_$(date +%F_%T).json${CLR_RESET}"
    else
        echo -e "${CLR_WARNING}‚ö† –§–∞–π–ª node_info.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $HOME/pipe${CLR_RESET}"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
function update_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...${CLR_RESET}"
    CURRENT_VERSION=$(curl -s https://dl.pipecdn.app/v0.2.8/pop --head | grep -i location | awk '{print $2}')
    echo -e "${CLR_INFO}‚ñ∂ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: v0.2.8, –¥–æ—Å—Ç—É–ø–Ω–∞—è: $CURRENT_VERSION${CLR_RESET}"
    read -p "–û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É? (y/n): " UPDATE_CONFIRM
    if [[ "$UPDATE_CONFIRM" == "y" ]]; then
        screen -S pipe_node -X quit
        cd $HOME/pipe
        curl -L -o pop "$CURRENT_VERSION"
        sudo chmod +x pop
        sudo setcap 'cap_net_bind_service=+ep' ./pop
        if [ -f "$CONFIG_FILE" ]; then
            source "$CONFIG_FILE"
            sudo screen -dmS pipe_node ./pop --ram "$RAM" --max-disk "$DISK" --cache-dir ./pipe_cache --pubKey "$WALLET_KEY" --enable-80-443
            echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!${CLR_RESET}"
        else
            echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $CONFIG_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–¥—É —á–µ—Ä–µ–∑ –ø—É–Ω–∫—Ç 1.${CLR_RESET}"
        fi
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã –∏ –µ—ë —Ñ–∞–π–ª–æ–≤
function remove_node() {
    read -p "‚ö† –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É Pipe? (y/n): " CONFIRM
    if [[ "$CONFIRM" == "y" ]]; then
        echo -e "${CLR_WARNING}‚ñ∂ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Pipe...${CLR_RESET}"
        screen -S pipe_node -X quit
        rm -rf $HOME/pipe
        echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ Pipe —É–¥–∞–ª–µ–Ω–∞!${CLR_RESET}"
    else
        echo -e "${CLR_INFO}‚ñ∂ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.${CLR_RESET}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ RAM –∏ DISK
function check_resources() {
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤...${CLR_RESET}"
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
        echo -e "${CLR_SUCCESS}–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:${CLR_RESET}"
        echo -e "RAM: $RAM –ì–ë"
        echo -e "DISK: $DISK –ì–ë"
    else
        echo -e "${CLR_WARNING}‚ö† –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª $CONFIG_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–¥—É —á–µ—Ä–µ–∑ –ø—É–Ω–∫—Ç 1.${CLR_RESET}"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º —Å –ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
function show_menu() {
    show_logo
    echo -e "${CLR_GREEN}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}2) üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–æ–¥—ã${CLR_RESET}"
    echo -e "${CLR_GREEN}3) üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∏–Ω—Ç—ã${CLR_RESET}"
    echo -e "${CLR_GREEN}4) üåê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥${CLR_RESET}"
    echo -e "${CLR_GREEN}5) üíæ –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é node_info.json${CLR_RESET}"
    echo -e "${CLR_GREEN}6) üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}7) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}8) üìà –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã RAM –∏ DISK${CLR_RESET}"
    echo -e "${CLR_GREEN}9) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    echo -e "${CLR_INFO}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è:${CLR_RESET}"
    read -r choice

    case $choice in
        1) install_dependencies && install_and_setup_node ;;
        2) check_status ;;
        3) check_points ;;
        4) generate_referral ;;
        5) backup_node_info ;;
        6) update_node ;;
        7) remove_node ;;
        8) check_resources ;;
        9) echo -e "${CLR_ERROR}–í—ã—Ö–æ–¥...${CLR_RESET}" ;;
        *) echo -e "${CLR_WARNING}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${CLR_RESET}" && show_menu ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu